root = true
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
end_of_line = crlf
insert_final_newline = true
charset = utf-8-bom
# Code files
[*.{cs,csx,vb,vbx}]
indent_style = space
indent_size = 4
###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
# Additional rules
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_remove_unnecessary_suppression_exclusions = none
###############################
# Naming Conventions          #
###############################
# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.i_pascal_case_style.capitalization  = pascal_case
dotnet_naming_style.i_pascal_case_style.required_prefix = I
dotnet_naming_style.underscore_camel_case_style.capitalization  = camel_case
dotnet_naming_style.underscore_camel_case_style.required_prefix = _
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_style.t_pascal_case_style.capitalization  = pascal_case
dotnet_naming_style.t_pascal_case_style.required_prefix = T
# Use PascalCase for constant fields  
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds            = field,local
dotnet_naming_symbols.constant_fields.applicable_accessibilities  = *
dotnet_naming_symbols.constant_fields.required_modifiers          = const
# Use IPascalCase for interfaces
dotnet_naming_rule.interfaces_should_begin_with_i.severity  = warning
dotnet_naming_rule.interfaces_should_begin_with_i.symbols   = interfaces
dotnet_naming_rule.interfaces_should_begin_with_i.style     = i_pascal_case_style
dotnet_naming_symbols.interfaces.applicable_kinds           = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
# Use PascalCase for all other types
dotnet_naming_rule.other_types_should_be_pascal_case.severity = warning
dotnet_naming_rule.other_types_should_be_pascal_case.symbols  = other_types
dotnet_naming_rule.other_types_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.other_types.applicable_kinds            = class,struct,delegate,enum,namespace,local_function
dotnet_naming_symbols.other_types.applicable_accessibilities  = *
# Use PascalCase for public/protected fields
dotnet_naming_rule.public_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_fields_should_be_pascal_case.symbols  = public_members
dotnet_naming_rule.public_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.public_members.applicable_kinds           = field
dotnet_naming_symbols.public_members.applicable_accessibilities = public,protected,protected_internal,private_protected
# Use _camelCase for private fields
dotnet_naming_rule.private_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.private_fields_should_be_camel_case.symbols  = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case.style    = underscore_camel_case_style
dotnet_naming_symbols.private_fields.applicable_kinds           = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
# Use camelCase for internal fields
dotnet_naming_rule.internal_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.internal_fields_should_be_camel_case.symbols  = internal_fields
dotnet_naming_rule.internal_fields_should_be_camel_case.style    = camel_case_style
dotnet_naming_symbols.internal_fields.applicable_kinds           = field
dotnet_naming_symbols.internal_fields.applicable_accessibilities = internal
# Use PascalCase for all methods, properties, and events
dotnet_naming_rule.methods_properties_events_should_be_pascal_case.severity = warning
dotnet_naming_rule.methods_properties_events_should_be_pascal_case.symbols  = methods_properties_events
dotnet_naming_rule.methods_properties_events_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.methods_properties_events.applicable_kinds            = method,property,event
dotnet_naming_symbols.methods_properties_events.applicable_accessibilities  = *
# Use TPascalCase for type parameters
dotnet_naming_rule.type_parameters_should_begin_with_t.severity = warning
dotnet_naming_rule.type_parameters_should_begin_with_t.symbols  = type_parameter
dotnet_naming_rule.type_parameters_should_begin_with_t.style    = t_pascal_case_style
dotnet_naming_symbols.type_parameter.applicable_kinds           = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *
# Use camelCase for locals and function parameters
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols  = locals
dotnet_naming_rule.locals_should_be_camel_case.style    = camel_case_style
dotnet_naming_symbols.locals.applicable_kinds           = local,parameter
dotnet_naming_symbols.locals.applicable_accessibilities = *
###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent
csharp_style_var_elsewhere = false:silent
# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_not_pattern = false:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:warning
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
csharp_prefer_static_local_function = true:suggestion
# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_prefer_simple_default_expression = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:suggestion
csharp_style_deconstructed_variable_declaration = true:silent
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_implicit_object_creation_when_type_is_apparent = false:silent
# Using directives preferences
csharp_using_directive_placement = outside_namespace:silent
csharp_style_namespace_declarations = file_scoped:warning
dotnet_style_namespace_match_folder = true:silent
###############################
# C# Formatting Rules         #
###############################
# New line preferences
## These define the regular C# style, except that multiple property initializers may be on the same line
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_members_in_anonymous_types = false
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
# Suppressions
# CA1822: Member als statisch markieren
dotnet_diagnostic.CA1822.severity = silent
###############################
# VB Coding Conventions       #
###############################
[*.vb]
# Modifier preferences
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:suggestion
